#!/usr/bin/python

import os, sys

import xmlread as xread
import systemdatabase as systemdb
import readincidents as read
import systemstatus


#############################
#	Function "initialCheck"
#		Checks the option provided and runs the desired code
#############################
def initialCheck():
	# Basic usage, working daemonized
	if len(sys.argv) == 1:
		print 'GeDRA started running.'
		print 'If you want to stop the execution, please use "Ctrl+C"'
		print
		systemstatus.showStatus()
		print 
		read.background()

	# Check wich option is provided
	elif len(sys.argv) >= 2:
		option = sys.argv[1]

		if (option == '-c') or (option == '--create'):
			if len(sys.argv) == 3:
				filePath = sys.argv[2]
				if os.path.exists(filePath):
					model_file = filePath
				# Else, ask for a new path
				else:
					model_file = str(raw_input("The file does not exist. Enter a valid path: "))
			else:
				model_file = str(raw_input("Enter the name of the xml file descriptor: "))
			xread.readFile(model_file)

		elif option == '-a' or option == '--add':
			systemdb.addToTable()
			pass

		elif option == '-m' or option == '--modify':
			if len(sys.argv) < 6:
				print 'Not enough information provided. Try again.'
			else:
				element_name = sys.argv[2]
				affected_element_id = sys.argv[3]
				parameter = sys.argv[4]
				value = sys.argv[5]
				systemdb.modifyDatabase(element_name, affected_element_id, parameter, value)
				print 'Value modified.'
				sys.exit(0)

		elif option == '-h' or option == '--help':
			usage()
			sys.exit(0)

		elif option == '-s' or option == '--status':
			systemstatus.showStatus()
			sys.exit(0)

		else:
			print 'The option provided is not supported.'
			usage()
			sys.exit(0)

#############################
#	Function "usage"
#		Help page
#############################
def usage():
    print "\nUSAGE: %s [options]" % sys.argv[0]
    print "Without options      	  	run the module in background.\n"
    print "OPTIONS:"
    print "-c --create 'file.xml'  	build a new system defined in the provided file."
    print "-a --add 'System'	   	add elements to previously created system."
    print "-m --modify element_type element_name parameter new_value\n Add elements to previously created system."
    print "-s --status 	   		display the status of the system."
    print "-h --help           		display this information."
    print

#############################
#	Function "setup"
#		Initializes some required files
#############################
def setup():
	# Check if directory & report file exists. Otherwise, create them.
	user = os.getlogin()
	directoryExists = os.path.exists('/home/'+ user +'/gedra')
	if directoryExists == 1:
		fileExists = os.path.exists('/home/'+ user +'/gedra/report')
		if fileExists == 1:
			pass
		else:
			os.system('touch /home/'+ user +'/gedra/report')
		print 'Report file at "/home/'+user+'/gedra/*"\n'
	else:
		print 'Creating report directory & file. Locate at "/home/'+user+'/gedra/*"\n'
		os.mkdir('/home/'+ user +'/gedra')
		os.system('touch /home/'+ user +'/gedra/report')

# ---- Main ----
setup()
systemstatus.init()
initialCheck()